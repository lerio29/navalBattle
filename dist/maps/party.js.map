{"version":3,"sources":["party.ts"],"names":[],"mappings":"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","file":"../src/party.js","sourcesContent":["import {Player} from \"./player\";\nimport {BattleMatrice} from \"./battleMatrice\"; \nimport {BattleUtils} from \"./battleUtils\";\nimport {EnumStatus} from \"./enumStatus\";\nimport {MatriceCase} from \"./matriceCase\"; \nimport {Logger} from \"./logger\";\n\nexport class Party {\n\t\n\tpublic _logger :Logger  = new Logger();\n\n\tprivate _players :Array<string> = [];\n\tprivate _timestamp :number =  undefined;\n\tprivate _id :string = undefined;\n\n\n\tconstructor(player1:Player, player2 :Player){\n\n\t\tthis._timestamp = Date.now();\n\t\tthis._players.push(player1.name);\n\t\tthis._players.push(player2.name);\n\n\t\tthis._id = this._players.toString().trim() + this._timestamp.toString();\n\n\t}\n\n\tget getId() :string{\n\t\treturn  this._id;\n\t}\n\n\thit(fromPlayer :Player, intoPlayer :Player, hor :number, vert :number) :void{\n\t\t let grilleFromPlayer = fromPlayer.grid;\n\t\t let grilleIntoPlayer :BattleMatrice = intoPlayer.grid;\n\n\t\t \n\n\t\t if(grilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).state === EnumStatus.STATUS_EMPTY){\n\t\t \t\n\t\t \tthis._logger.debug(\"before hit  : \" + \" fromPlayer : \" + fromPlayer.name + \" into : \" + intoPlayer.name + \" \" + BattleUtils.generateKeyGridByVal(hor,vert) + \"; state :\" + grilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).state );\n\t\t \tgrilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).updateStatus(EnumStatus.STATUS_FAIL);\n\t\t \tthis._logger.debug(\"hit: \" + \" fromPlayer : \" + fromPlayer.name + \" into : \" + intoPlayer.name + \" \" + BattleUtils.generateKeyGridByVal(hor,vert) + \"; state :\" + grilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).state);\n\t\t }else{\n\t\t \tthis._logger.debug(\"before hit: \" + \" fromPlayer : \" + fromPlayer.name + \" into : \" + intoPlayer.name + \" \" + BattleUtils.generateKeyGridByVal(hor,vert) + \"; state :\" + grilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).state);\n\t\t \tgrilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).updateStatus(EnumStatus.STATUS_HIT);\n\t\t \tthis._logger.debug(\"hit: \" + \" fromPlayer : \" + fromPlayer.name + \" into : \" + intoPlayer.name + \" \" + BattleUtils.generateKeyGridByVal(hor,vert) + \"; state :\" + grilleIntoPlayer.getMatrice.getValue(BattleUtils.generateKeyGridByVal(hor,vert)).state);\n\t\t }\n\n\t}\n\n\n\n}"]}